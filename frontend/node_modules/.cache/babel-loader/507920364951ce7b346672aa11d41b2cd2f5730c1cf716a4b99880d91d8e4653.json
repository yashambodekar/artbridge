{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.configureResourceManagement = configureResourceManagement;\nexports.configureExplicitResourceManagement = configureExplicitResourceManagement;\n/** @internal */\nfunction configureResourceManagement(target) {\n  Symbol.asyncDispose && Object.defineProperty(target, Symbol.asyncDispose, {\n    value: async function asyncDispose() {\n      await this.asyncDispose();\n    },\n    enumerable: false,\n    configurable: true,\n    writable: true\n  });\n}\n/**\n * @beta\n * @experimental\n *\n * Attaches `Symbol.asyncDispose` methods to the MongoClient, Cursors, sessions and change streams\n * if Symbol.asyncDispose is defined.\n *\n * It's usually not necessary to call this method - the driver attempts to attach these methods\n * itself when its loaded.  However, sometimes the driver may be loaded before `Symbol.asyncDispose`\n * is defined, in which case it is necessary to call this method directly.  This can happen if the\n * application is polyfilling `Symbol.asyncDispose`.\n *\n * Example:\n *\n * ```typescript\n * import { configureExplicitResourceManagement, MongoClient } from 'mongodb/lib/beta';\n *\n * Symbol.asyncDispose ??= Symbol('dispose');\n * load();\n *\n * await using client = new MongoClient(...);\n * ```\n */\nfunction configureExplicitResourceManagement() {\n  // We must import lazily here, because there's a circular dependency between the resource management\n  // file and each resources' file.  We could move `configureResourceManagement` to a separate\n  // function, but keeping all resource-management related code together seemed preferable and I chose\n  // lazy requiring of resources instead.\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const {\n    MongoClient\n  } = require('./mongo_client');\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const {\n    ClientSession\n  } = require('./sessions');\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const {\n    AbstractCursor\n  } = require('./cursor/abstract_cursor');\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const {\n    ChangeStream\n  } = require('./change_stream');\n  configureResourceManagement(MongoClient.prototype);\n  configureResourceManagement(ClientSession.prototype);\n  configureResourceManagement(AbstractCursor.prototype);\n  configureResourceManagement(ChangeStream.prototype);\n}","map":{"version":3,"names":["exports","configureResourceManagement","configureExplicitResourceManagement","target","Symbol","asyncDispose","Object","defineProperty","value","enumerable","configurable","writable","MongoClient","require","ClientSession","AbstractCursor","ChangeStream","prototype"],"sources":["C:\\Users\\HP\\node_modules\\mongodb\\src\\resource_management.ts"],"sourcesContent":["/**\n * @public\n */\nexport interface AsyncDisposable {\n  /**\n   * @beta\n   * @experimental\n   */\n  [Symbol.asyncDispose](): Promise<void>;\n\n  /**\n   * @internal\n   *\n   * A method that wraps disposal semantics for a given resource in the class.\n   */\n  asyncDispose(): Promise<void>;\n}\n\n/** @internal */\nexport function configureResourceManagement(target: AsyncDisposable) {\n  Symbol.asyncDispose &&\n    Object.defineProperty(target, Symbol.asyncDispose, {\n      value: async function asyncDispose(this: AsyncDisposable) {\n        await this.asyncDispose();\n      },\n      enumerable: false,\n      configurable: true,\n      writable: true\n    });\n}\n\n/**\n * @beta\n * @experimental\n *\n * Attaches `Symbol.asyncDispose` methods to the MongoClient, Cursors, sessions and change streams\n * if Symbol.asyncDispose is defined.\n *\n * It's usually not necessary to call this method - the driver attempts to attach these methods\n * itself when its loaded.  However, sometimes the driver may be loaded before `Symbol.asyncDispose`\n * is defined, in which case it is necessary to call this method directly.  This can happen if the\n * application is polyfilling `Symbol.asyncDispose`.\n *\n * Example:\n *\n * ```typescript\n * import { configureExplicitResourceManagement, MongoClient } from 'mongodb/lib/beta';\n *\n * Symbol.asyncDispose ??= Symbol('dispose');\n * load();\n *\n * await using client = new MongoClient(...);\n * ```\n */\nexport function configureExplicitResourceManagement() {\n  // We must import lazily here, because there's a circular dependency between the resource management\n  // file and each resources' file.  We could move `configureResourceManagement` to a separate\n  // function, but keeping all resource-management related code together seemed preferable and I chose\n  // lazy requiring of resources instead.\n\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const { MongoClient } = require('./mongo_client');\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const { ClientSession } = require('./sessions');\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const { AbstractCursor } = require('./cursor/abstract_cursor');\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const { ChangeStream } = require('./change_stream');\n\n  configureResourceManagement(MongoClient.prototype);\n  configureResourceManagement(ClientSession.prototype);\n  configureResourceManagement(AbstractCursor.prototype);\n  configureResourceManagement(ChangeStream.prototype);\n}\n"],"mappings":";;;;;AAmBAA,OAAA,CAAAC,2BAAA,GAAAA,2BAAA;AAmCAD,OAAA,CAAAE,mCAAA,GAAAA,mCAAA;AApCA;AACA,SAAgBD,2BAA2BA,CAACE,MAAuB;EACjEC,MAAM,CAACC,YAAY,IACjBC,MAAM,CAACC,cAAc,CAACJ,MAAM,EAAEC,MAAM,CAACC,YAAY,EAAE;IACjDG,KAAK,EAAE,eAAeH,YAAYA,CAAA;MAChC,MAAM,IAAI,CAACA,YAAY,EAAE;IAC3B,CAAC;IACDI,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE,IAAI;IAClBC,QAAQ,EAAE;GACX,CAAC;AACN;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAgBT,mCAAmCA,CAAA;EACjD;EACA;EACA;EACA;EAEA;EACA,MAAM;IAAEU;EAAW,CAAE,GAAGC,OAAO,CAAC,gBAAgB,CAAC;EACjD;EACA,MAAM;IAAEC;EAAa,CAAE,GAAGD,OAAO,CAAC,YAAY,CAAC;EAC/C;EACA,MAAM;IAAEE;EAAc,CAAE,GAAGF,OAAO,CAAC,0BAA0B,CAAC;EAC9D;EACA,MAAM;IAAEG;EAAY,CAAE,GAAGH,OAAO,CAAC,iBAAiB,CAAC;EAEnDZ,2BAA2B,CAACW,WAAW,CAACK,SAAS,CAAC;EAClDhB,2BAA2B,CAACa,aAAa,CAACG,SAAS,CAAC;EACpDhB,2BAA2B,CAACc,cAAc,CAACE,SAAS,CAAC;EACrDhB,2BAA2B,CAACe,YAAY,CAACC,SAAS,CAAC;AACrD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}