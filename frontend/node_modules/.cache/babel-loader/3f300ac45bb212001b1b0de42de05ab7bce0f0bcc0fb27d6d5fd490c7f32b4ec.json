{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\artbridge\\\\frontend\\\\src\\\\components\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\n\n// Function to check user authentication and role\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getUser = () => {\n  const user = localStorage.getItem(\"user\");\n  return user ? JSON.parse(user) : null;\n};\nconst PrivateRoute = ({\n  allowedRoles\n}) => {\n  const user = getUser();\n\n  // Debugging logs\n  console.debug(\"PrivateRoute debug:\", {\n    user,\n    allowedRoles,\n    userRole: user === null || user === void 0 ? void 0 : user.role\n  });\n\n  // If not authenticated, redirect to login\n  if (!user) {\n    console.log(\"User not authenticated. Redirecting to /Login.\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/Login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If user's role is not allowed for this route\n  if (!allowedRoles.includes(user.role)) {\n    console.log(\"User role not authorized for this route.\");\n\n    // Role-based redirection to correct home\n    switch (user.role) {\n      case \"Artisan\":\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/Artisan/ArtisanHome\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this);\n      case \"Consumer\":\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/Consumer/ConsumerHome\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/access-denied\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this);\n    }\n  }\n\n  // If authenticated and role is authorized\n  console.log(\"User authorized. Rendering route.\");\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","getUser","user","localStorage","getItem","JSON","parse","PrivateRoute","allowedRoles","console","debug","userRole","role","log","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes","_c","$RefreshReg$"],"sources":["C:/Users/HP/artbridge/frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\n\r\n// Function to check user authentication and role\r\nconst getUser = () => {\r\n  const user = localStorage.getItem(\"user\");\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\nconst PrivateRoute = ({ allowedRoles }) => {\r\n  const user = getUser();\r\n\r\n  // Debugging logs\r\n  console.debug(\"PrivateRoute debug:\", {\r\n    user,\r\n    allowedRoles,\r\n    userRole: user?.role,\r\n  });\r\n\r\n  // If not authenticated, redirect to login\r\n  if (!user) {\r\n    console.log(\"User not authenticated. Redirecting to /Login.\");\r\n    return <Navigate to=\"/Login\" replace />;\r\n  }\r\n\r\n  // If user's role is not allowed for this route\r\n  if (!allowedRoles.includes(user.role)) {\r\n    console.log(\"User role not authorized for this route.\");\r\n\r\n    // Role-based redirection to correct home\r\n    switch (user.role) {\r\n      case \"Artisan\":\r\n        return <Navigate to=\"/Artisan/ArtisanHome\" replace />;\r\n      case \"Consumer\":\r\n        return <Navigate to=\"/Consumer/ConsumerHome\" replace />;\r\n      default:\r\n        return <Navigate to=\"/access-denied\" replace />;\r\n    }\r\n  }\r\n\r\n  // If authenticated and role is authorized\r\n  console.log(\"User authorized. Rendering route.\");\r\n  return <Outlet />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOF,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAG,IAAI;AACvC,CAAC;AAED,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EACzC,MAAMN,IAAI,GAAGD,OAAO,CAAC,CAAC;;EAEtB;EACAQ,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAE;IACnCR,IAAI;IACJM,YAAY;IACZG,QAAQ,EAAET,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU;EAClB,CAAC,CAAC;;EAEF;EACA,IAAI,CAACV,IAAI,EAAE;IACTO,OAAO,CAACI,GAAG,CAAC,gDAAgD,CAAC;IAC7D,oBAAOb,OAAA,CAACH,QAAQ;MAACiB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAI,CAACX,YAAY,CAACY,QAAQ,CAAClB,IAAI,CAACU,IAAI,CAAC,EAAE;IACrCH,OAAO,CAACI,GAAG,CAAC,0CAA0C,CAAC;;IAEvD;IACA,QAAQX,IAAI,CAACU,IAAI;MACf,KAAK,SAAS;QACZ,oBAAOZ,OAAA,CAACH,QAAQ;UAACiB,EAAE,EAAC,sBAAsB;UAACC,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvD,KAAK,UAAU;QACb,oBAAOnB,OAAA,CAACH,QAAQ;UAACiB,EAAE,EAAC,wBAAwB;UAACC,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACzD;QACE,oBAAOnB,OAAA,CAACH,QAAQ;UAACiB,EAAE,EAAC,gBAAgB;UAACC,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACnD;EACF;;EAEA;EACAV,OAAO,CAACI,GAAG,CAAC,mCAAmC,CAAC;EAChD,oBAAOb,OAAA,CAACF,MAAM;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACE,EAAA,GAlCId,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}