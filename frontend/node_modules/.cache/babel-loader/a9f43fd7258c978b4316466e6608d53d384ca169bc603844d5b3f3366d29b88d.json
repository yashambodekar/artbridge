{"ast":null,"code":"exports.deleteCourseContent = async (req, res) => {\n  try {\n    const {\n      contentId\n    } = req.params;\n    const courseContent = await CourseContent.findById(contentId);\n    if (!courseContent) {\n      return res.status(404).json({\n        message: \"Course content not found\"\n      });\n    }\n\n    // Check if the user is the uploader\n    if (courseContent.uploadedBy.toString() !== req.user._id.toString()) {\n      return res.status(403).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    // Delete files from the filesystem\n    courseContent.files.forEach(filePath => {\n      fs.unlink(filePath, err => {\n        if (err) console.error(\"Error deleting file:\", err);\n      });\n    });\n    await courseContent.deleteOne();\n    res.json({\n      message: \"Course content deleted successfully\"\n    });\n  } catch (error) {\n    console.error(\"Delete course content error:\", error);\n    res.status(500).json({\n      message: \"Server error\"\n    });\n  }\n};","map":{"version":3,"names":["exports","deleteCourseContent","req","res","contentId","params","courseContent","CourseContent","findById","status","json","message","uploadedBy","toString","user","_id","files","forEach","filePath","fs","unlink","err","console","error","deleteOne"],"sources":["C:/Users/HP/artbridge/frontend/src/pages/Artisan/CourseManage.js"],"sourcesContent":["exports.deleteCourseContent = async (req, res) => {\r\n  try {\r\n    const { contentId } = req.params;\r\n\r\n    const courseContent = await CourseContent.findById(contentId);\r\n    if (!courseContent) {\r\n      return res.status(404).json({ message: \"Course content not found\" });\r\n    }\r\n\r\n    // Check if the user is the uploader\r\n    if (courseContent.uploadedBy.toString() !== req.user._id.toString()) {\r\n      return res.status(403).json({ message: \"Unauthorized\" });\r\n    }\r\n\r\n    // Delete files from the filesystem\r\n    courseContent.files.forEach((filePath) => {\r\n      fs.unlink(filePath, (err) => {\r\n        if (err) console.error(\"Error deleting file:\", err);\r\n      });\r\n    });\r\n\r\n    await courseContent.deleteOne();\r\n    res.json({ message: \"Course content deleted successfully\" });\r\n  } catch (error) {\r\n    console.error(\"Delete course content error:\", error);\r\n    res.status(500).json({ message: \"Server error\" });\r\n  }\r\n};"],"mappings":"AAAAA,OAAO,CAACC,mBAAmB,GAAG,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAChD,IAAI;IACF,MAAM;MAAEC;IAAU,CAAC,GAAGF,GAAG,CAACG,MAAM;IAEhC,MAAMC,aAAa,GAAG,MAAMC,aAAa,CAACC,QAAQ,CAACJ,SAAS,CAAC;IAC7D,IAAI,CAACE,aAAa,EAAE;MAClB,OAAOH,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA2B,CAAC,CAAC;IACtE;;IAEA;IACA,IAAIL,aAAa,CAACM,UAAU,CAACC,QAAQ,CAAC,CAAC,KAAKX,GAAG,CAACY,IAAI,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,EAAE;MACnE,OAAOV,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAe,CAAC,CAAC;IAC1D;;IAEA;IACAL,aAAa,CAACU,KAAK,CAACC,OAAO,CAAEC,QAAQ,IAAK;MACxCC,EAAE,CAACC,MAAM,CAACF,QAAQ,EAAGG,GAAG,IAAK;QAC3B,IAAIA,GAAG,EAAEC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MACrD,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMf,aAAa,CAACkB,SAAS,CAAC,CAAC;IAC/BrB,GAAG,CAACO,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAsC,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpDpB,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAe,CAAC,CAAC;EACnD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}